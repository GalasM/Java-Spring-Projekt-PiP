package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import java.util.List;


@Controller    // This means that this class is a Controller
public class StudentController {
    @Autowired
     private StudentJdbcRepository userRepository;

    @GetMapping("/index")
    public String index(){
        return "index";
    }

    @GetMapping("/student")
    public String greetingForm(Model model) {
        model.addAttribute("student", new Student());
        return "formStudent";
    }

    @PostMapping("/student")
    public String greetingSubmit(@ModelAttribute ("student")Student student,
        BindingResult result, ModelMap model) {
            if (result.hasErrors()) {
                return "error";
            }
        model.addAttribute("name", student.getName());
        model.addAttribute("passportNumber", student.getPassportNumber());
        model.addAttribute("id", student.getId());
        userRepository.insert(student);
        return "result";
    }

    @GetMapping("/all")
    public String allUsers(Model model){
        List<Student> list = userRepository.findAll();
        model.addAttribute("allStudents", list);
        return "allUsers";
    }

    @PostMapping(value="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestBody Student st) {
        userRepository.insert(st);
        return "Saved";
    }

   /* @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    @PostMapping(value="/add", consumes = "application/json", produces = "application/json") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestBody Student st) {
        userRepository.insert(st);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Student> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }*/
}
